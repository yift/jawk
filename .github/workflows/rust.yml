name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Run check
      run: cargo check --verbose
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Run Format
      run: cargo fmt --all --check --verbose
    - name: Run Clippy
      run: cargo clippy --verbose -- -D warnings

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install Tarpaulin
      run: cargo install cargo-tarpaulin
    - name: Create Report
      run: cargo tarpaulin --out Html --fail-under 50
    - uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ./tarpaulin-report.html
        retention-days: 1
        
  build:
    needs:
      - verify
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: ''
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ''
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: '.exe'
    steps:
      - uses: actions/checkout@master
      - name: build
        run: cargo build --release --verbose
      - uses: actions/upload-artifact@v4
        with:
          name: jawk-${{ matrix.target }}
          path: ./target/release/jawk${{ matrix.suffix }}
          retention-days: 1
  build-musl-and-docker:
    needs:
      - verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: install musl
        run:  rustup target add x86_64-unknown-linux-musl
      - name: build
        run: cargo build --release --target=x86_64-unknown-linux-musl --verbose
      - uses: actions/upload-artifact@v4
        with:
          name: jawk-x86_64-unknown-linux-musl
          path: ./target/x86_64-unknown-linux-musl/release/jawk
          retention-days: 1
      - name: Copy binary
        run: |
          rm -rf ./docker/target
          mkdir -p ./docker/target
          cp ./target/x86_64-unknown-linux-musl/release/jawk ./docker/target/jawk
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: docker
          push: true
          tags: yiftach/jawk:latest,yiftach/jawk:0.1

  produce-book:
    needs:
      - build-musl-and-docker
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: build
        run: cargo build --features=create-docs
      - name: create book
        run: target/debug/jawk --build-docs
      - name: Install mdBook
        run: cargo install mdbook
      - name: Build book
        working-directory: target/docs/book/
        run: mdbook build
      - uses: actions/download-artifact@v4
        with:
          pattern: jawk-*
          path: target/docs/book/
      - uses: Dylan700/sftp-upload-action@latest
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSSWORD }}
          port: 22
          uploads: |
            target/docs/book/book/ => ./
